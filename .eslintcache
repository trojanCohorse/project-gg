[{"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/index.js":"1","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/reportWebVitals.js":"2","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/App.js":"3","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/Navbar.js":"4","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/InputReferences.js":"5","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/Episode.js":"6","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/SeasonDisplay.js":"7","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/episodeReq.js":"8","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/NewReferencesDisplay.js":"9","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/LoginButton.js":"10","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/LogoutButton.js":"11","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/referencePost.js":"12"},{"size":506,"mtime":1609362364447,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609273949542,"results":"15","hashOfConfig":"14"},{"size":1725,"mtime":1609691846149,"results":"16","hashOfConfig":"14"},{"size":1314,"mtime":1609686734392,"results":"17","hashOfConfig":"14"},{"size":6845,"mtime":1609690931394,"results":"18","hashOfConfig":"14"},{"size":234,"mtime":1609622906823,"results":"19","hashOfConfig":"14"},{"size":1788,"mtime":1609686734393,"results":"20","hashOfConfig":"14"},{"size":752,"mtime":1609622906825,"results":"21","hashOfConfig":"14"},{"size":2293,"mtime":1609686734392,"results":"22","hashOfConfig":"14"},{"size":219,"mtime":1609686734391,"results":"23","hashOfConfig":"14"},{"size":202,"mtime":1609686734391,"results":"24","hashOfConfig":"14"},{"size":639,"mtime":1609686734394,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1l7p9qi",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/index.js",[],["54","55"],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/reportWebVitals.js",[],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/App.js",["56"],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/Navbar.js",[],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/InputReferences.js",["57"],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/Episode.js",[],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/SeasonDisplay.js",["58","59","60","61"],"import { useState, useEffect, } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst SeasonDisplay = () => {\n  const { seasonNum } = useParams();\n\n  const [seasonsObj, setSeasonsObj] = useState({});\n  const [showSeason, setShowSeason] = useState(seasonNum);\n  // line below is to prevent rerenders\n  if (showSeason !== seasonNum) setShowSeason(seasonNum);\n\n  // when the page gets loaded, initialize first season\n  // https://project-gg.herokuapp.com/seasons/1\n  // http://127.0.0.1:5000/seasons/1\n  useEffect(() => {\n    if (typeof seasonsObj[showSeason] === 'undefined') {\n      axios({\n        method: 'GET',\n        url: `https://project-gg.herokuapp.com/seasons/${showSeason}`\n      }).then(res => {\n        console.log('gotted');\n        setSeasonsObj({...seasonsObj, [showSeason]: [res.data[0]] })\n      }).catch(err => console.log(err));\n    }\n  }, [showSeason]);\n\n\n  return (  \n    <section className=\"seasons\">\n      <h2>Season {showSeason}</h2>\n      <ul className=\"episodeList wrapper\">\n        {\n          typeof seasonsObj[showSeason] !== 'undefined' && (\n            seasonsObj[showSeason][0].episodes.map((episode) => {\n              const { episodeNumber, name, overallNumber, references, seasonNumber } = episode;\n              return (\n                <li key={episodeNumber} className=\"episodeCard\">\n                  <div>\n                    <h3>{name}</h3>\n                    <h4> Episode {episodeNumber}</h4>\n                  </div>\n\n                  <p>Image Goes Here</p>\n                  <Link to={`/season/${showSeason}/episode/${episodeNumber}`} >See References</Link>\n                </li>\n              )\n            })\n          )\n        }\n      </ul>\n    </section>\n  )\n}\n\nexport default SeasonDisplay;\n","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/episodeReq.js",["62"],"import axios from 'axios';\n\nconst axiosRequest = (seasonNum) => {\n  // formatted array that has returned values from map, and then gets returned itself\n  const readyToExport = [];\n  // https://project-gg.herokuapp.com/seasons/${seasonNum}\n  axios({\n    method: 'GET',\n    url: `https://project-gg.herokuapp.com/seasons/${seasonNum}`,\n    responseType: \"json\"\n  }).then((res) => {\n    const episodesArr =res.data[0].episodes;\n    \n\n    episodesArr.map(episode => {\n      const formattedEpisode = {\n        value: episode.episodeNumber,\n        label: `${episode.episodeNumber} - ${episode.name}`\n      }\n      readyToExport.push(formattedEpisode);\n    });\n  }).catch((err) => console.log(err));\n  \n  return readyToExport;\n}\n\nexport default axiosRequest;","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/NewReferencesDisplay.js",["63"],"import { useState, useEffect, } from 'react';\nimport axios from 'axios';\nimport postRefToDb from './referencePost.js';\n\nconst NewReferencesDisplay = ()=> {\n  const [ approvalData, setApprovalData ] = useState([]);\n  \n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: `https://project-gg.herokuapp.com/seasons/approve`\n    }).then(res => {\n      console.log('Stuff to approve', res.data);\n      setApprovalData(res.data);\n      console.log(approvalData);\n    }).catch(err => console.log(err));\n  }, [])\n  console.log('Initial log');\n\n  return(\n    <div>\n      {\n        approvalData.map((item, episodeIndex) => {\n          return (\n            <article key={episodeIndex}>\n              <h3>Season: {item.seasonNumber}</h3>\n              <h3>Season: {item.episodeNumber}</h3>\n              {\n                item.references.map((reference, i) => {\n                  return (\n                    <article key={i}>\n                      <p>Subject: {reference.subject}</p>\n                      <p>Timestamp: {reference.timestamp}</p>\n                      <p>Quote: {reference.quote}</p>\n                      <p>Speaker: {reference.speaker}</p>\n                      <p>Context: {reference.context}</p>\n                      <p>Meaning: {reference.meaning}</p>\n                      <button onClick={ () => postRefToDb(reference.subject, reference.timestamp, reference.quote, reference.speaker, reference.context, reference.meaning, item.seasonNumber, item.episodeNumber, i) }>Approve</button>\n                    </article>\n                  )\n                })\n              }\n            </article>\n          )\n        })\n      }\n\n\n\n\n\n\n      {/* {approvalData.map((item, index) => {\n        return (\n          <article key={index}>\n            <p>Index: {index}</p>\n            <p>Subject: {item.subject}</p>\n            <p>Timestamp: {item.timestamp}</p>\n            <p>Quote: {item.quote}</p>\n            <p>Speaker: {item.speaker}</p>\n            <p>Context: {item.context}</p>\n            <p>Meaning: {item.meaning}</p>\n            <button onClick={ () => postRefToDb(item.subject, item.timestamp, item.quote, item.speaker, item.context, item.meaning) }>Approve</button>\n          </article>\n        )\n      })} */}\n    </div>\n  );\n}\n\n\nexport default NewReferencesDisplay;","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/LoginButton.js",[],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/LogoutButton.js",[],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/referencePost.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":42,"nodeType":"70","messageId":"71","endLine":2,"endColumn":46},{"ruleId":"68","severity":1,"message":"72","line":30,"column":10,"nodeType":"70","messageId":"71","endLine":30,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":26,"column":6,"nodeType":"75","endLine":26,"endColumn":18,"suggestions":"76"},{"ruleId":"68","severity":1,"message":"77","line":36,"column":44,"nodeType":"70","messageId":"71","endLine":36,"endColumn":57},{"ruleId":"68","severity":1,"message":"78","line":36,"column":59,"nodeType":"70","messageId":"71","endLine":36,"endColumn":69},{"ruleId":"68","severity":1,"message":"79","line":36,"column":71,"nodeType":"70","messageId":"71","endLine":36,"endColumn":83},{"ruleId":"80","severity":1,"message":"81","line":15,"column":29,"nodeType":"82","messageId":"83","endLine":15,"endColumn":31},{"ruleId":"73","severity":1,"message":"84","line":17,"column":6,"nodeType":"75","endLine":17,"endColumn":8,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'submit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'seasonsObj'. Either include it or remove the dependency array. You can also do a functional update 'setSeasonsObj(s => ...)' if you only need 'seasonsObj' in the 'setSeasonsObj' call.","ArrayExpression",["88"],"'overallNumber' is assigned a value but never used.","'references' is assigned a value but never used.","'seasonNumber' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'approvalData'. Either include it or remove the dependency array.",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [seasonsObj, showSeason]",{"range":"94","text":"95"},"Update the dependencies array to be: [approvalData]",{"range":"96","text":"97"},[904,916],"[seasonsObj, showSeason]",[512,514],"[approvalData]"]