[{"C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\index.js":"1","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\reportWebVitals.js":"2","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\App.js":"3","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\Navbar.js":"4","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\InputReferences.js":"5","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\Episode.js":"6","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\NewReferencesDisplay.js":"7","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\SeasonDisplay.js":"8","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\LoginButton.js":"9","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\LogoutButton.js":"10","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\episodeReq.js":"11","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\referencePost.js":"12"},{"size":523,"mtime":1609366703565,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1609362156993,"results":"15","hashOfConfig":"14"},{"size":1682,"mtime":1609686444644,"results":"16","hashOfConfig":"14"},{"size":1366,"mtime":1609629247224,"results":"17","hashOfConfig":"14"},{"size":7066,"mtime":1609691658560,"results":"18","hashOfConfig":"14"},{"size":244,"mtime":1609621274533,"results":"19","hashOfConfig":"14"},{"size":2364,"mtime":1609634826040,"results":"20","hashOfConfig":"14"},{"size":1844,"mtime":1609686444645,"results":"21","hashOfConfig":"14"},{"size":227,"mtime":1609629247211,"results":"22","hashOfConfig":"14"},{"size":210,"mtime":1609629247212,"results":"23","hashOfConfig":"14"},{"size":778,"mtime":1609621274537,"results":"24","hashOfConfig":"14"},{"size":662,"mtime":1609635150842,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"10gqg4j",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\index.js",[],["55","56"],"C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\reportWebVitals.js",[],"C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\App.js",["57"],"import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\nimport './sass/App.scss';\r\nimport InputReferences from './components/InputReferences.js';\r\nimport Navbar from \"./components/Navbar.js\";\r\nimport SeasonDisplay from \"./components/SeasonDisplay\";\r\nimport Episode from \"./components/Episode\";\r\nimport NewReferencesDisplay from \"./components/NewReferencesDisplay\"\r\n\r\nconst App = () => {\r\n  return (\r\n    <Auth0Provider\r\n    domain=\"codedkhan.us.auth0.com\"\r\n    clientId=\"1fAqEsZEmLK7Lfrh0PP01H8YbIPCs1q0\"\r\n    redirectUri={window.location.origin}>\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <div className=\"App\">\r\n        <header>\r\n          <div className=\"wrapper\">\r\n            <Route \r\n              path=\"/\" \r\n              component={Navbar} \r\n              />\r\n            {/* REVIEW title should reflect the purpose of our app (copyright!) */}\r\n            {/* TODO coffee beside h1 */}\r\n            <h1>Gilmore girls API</h1>\r\n            <img src=\"./coffee.png\" alt=\"Coffee Cup\"/>\r\n            <Route \r\n              path=\"/approve\"\r\n              component={NewReferencesDisplay}\r\n            />\r\n          </div>\r\n        </header>\r\n        <main>\r\n          <Route \r\n            exact path=\"/season/:seasonNum\" \r\n            component={SeasonDisplay} \r\n          />\r\n          <Route\r\n            exact path=\"/season/:seasonNum/episode/:episodeNum\"\r\n            component={Episode}\r\n          />\r\n          <Route path=\"/input\" component={InputReferences} />\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  </Auth0Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\Navbar.js",[],"C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\InputReferences.js",["58"],"C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\Episode.js",[],"C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\NewReferencesDisplay.js",["59"],"import { useState, useEffect, } from 'react';\r\nimport axios from 'axios';\r\nimport postRefToDb from './referencePost.js';\r\n\r\nconst NewReferencesDisplay = ()=> {\r\n  const [ approvalData, setApprovalData ] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    axios({\r\n      method: 'GET',\r\n      url: `https://project-gg.herokuapp.com/seasons/approve`\r\n    }).then(res => {\r\n      console.log('Stuff to approve', res.data);\r\n      setApprovalData(res.data);\r\n      console.log(approvalData);\r\n    }).catch(err => console.log(err));\r\n  }, [])\r\n  console.log('Initial log');\r\n\r\n  return(\r\n    <div>\r\n      {\r\n        approvalData.map((item, episodeIndex) => {\r\n          return (\r\n            <article key={episodeIndex}>\r\n              <h3>Season: {item.seasonNumber}</h3>\r\n              <h3>Season: {item.episodeNumber}</h3>\r\n              {\r\n                item.references.map((reference, i) => {\r\n                  return (\r\n                    <article key={i}>\r\n                      <p>Subject: {reference.subject}</p>\r\n                      <p>Timestamp: {reference.timestamp}</p>\r\n                      <p>Quote: {reference.quote}</p>\r\n                      <p>Speaker: {reference.speaker}</p>\r\n                      <p>Context: {reference.context}</p>\r\n                      <p>Meaning: {reference.meaning}</p>\r\n                      <button onClick={ () => postRefToDb(reference.subject, reference.timestamp, reference.quote, reference.speaker, reference.context, reference.meaning, item.seasonNumber, item.episodeNumber, i) }>Approve</button>\r\n                    </article>\r\n                  )\r\n                })\r\n              }\r\n            </article>\r\n          )\r\n        })\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n      {/* {approvalData.map((item, index) => {\r\n        return (\r\n          <article key={index}>\r\n            <p>Index: {index}</p>\r\n            <p>Subject: {item.subject}</p>\r\n            <p>Timestamp: {item.timestamp}</p>\r\n            <p>Quote: {item.quote}</p>\r\n            <p>Speaker: {item.speaker}</p>\r\n            <p>Context: {item.context}</p>\r\n            <p>Meaning: {item.meaning}</p>\r\n            <button onClick={ () => postRefToDb(item.subject, item.timestamp, item.quote, item.speaker, item.context, item.meaning) }>Approve</button>\r\n          </article>\r\n        )\r\n      })} */}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default NewReferencesDisplay;","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\SeasonDisplay.js",["60","61","62","63"],"import { useState, useEffect, } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst SeasonDisplay = () => {\r\n  const { seasonNum } = useParams();\r\n\r\n  const [seasonsObj, setSeasonsObj] = useState({});\r\n  const [showSeason, setShowSeason] = useState(seasonNum);\r\n  // line below is to prevent rerenders\r\n  if (showSeason !== seasonNum) setShowSeason(seasonNum);\r\n\r\n  // when the page gets loaded, initialize first season\r\n  // https://project-gg.herokuapp.com/seasons/1\r\n  // http://127.0.0.1:5000/seasons/1\r\n  useEffect(() => {\r\n    if (typeof seasonsObj[showSeason] === 'undefined') {\r\n      axios({\r\n        method: 'GET',\r\n        url: `https://project-gg.herokuapp.com/seasons/${showSeason}`\r\n      }).then(res => {\r\n        console.log('gotted');\r\n        setSeasonsObj({...seasonsObj, [showSeason]: [res.data[0]] })\r\n      }).catch(err => console.log(err));\r\n    }\r\n  }, [showSeason]);\r\n\r\n\r\n  return (  \r\n    <section className=\"seasons\">\r\n      <h2>Season {showSeason}</h2>\r\n      <ul className=\"episodeList wrapper\">\r\n        {\r\n          typeof seasonsObj[showSeason] !== 'undefined' && (\r\n            seasonsObj[showSeason][0].episodes.map((episode) => {\r\n              const { episodeNumber, name, overallNumber, references, seasonNumber } = episode;\r\n              return (\r\n                <li key={episodeNumber} className=\"episodeCard\">\r\n                  <div>\r\n                    <h3>{name}</h3>\r\n                    <h4> Episode {episodeNumber}</h4>\r\n                  </div>\r\n\r\n                  <p>Image Goes Here</p>\r\n                  <Link to={`/season/${showSeason}/episode/${episodeNumber}`} >See References</Link>\r\n                </li>\r\n              )\r\n            })\r\n          )\r\n        }\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SeasonDisplay;\r\n","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\LoginButton.js",[],"C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\LogoutButton.js",[],"C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\episodeReq.js",["64"],"import axios from 'axios';\r\n\r\nconst axiosRequest = (seasonNum) => {\r\n  // formatted array that has returned values from map, and then gets returned itself\r\n  const readyToExport = [];\r\n  // https://project-gg.herokuapp.com/seasons/${seasonNum}\r\n  axios({\r\n    method: 'GET',\r\n    url: `https://project-gg.herokuapp.com/seasons/${seasonNum}`,\r\n    responseType: \"json\"\r\n  }).then((res) => {\r\n    const episodesArr =res.data[0].episodes;\r\n    \r\n\r\n    episodesArr.map(episode => {\r\n      const formattedEpisode = {\r\n        value: episode.episodeNumber,\r\n        label: `${episode.episodeNumber} - ${episode.name}`\r\n      }\r\n      readyToExport.push(formattedEpisode);\r\n    });\r\n  }).catch((err) => console.log(err));\r\n  \r\n  return readyToExport;\r\n}\r\n\r\nexport default axiosRequest;","C:\\Users\\ulano\\Desktop\\sites\\gg-api\\project-gg\\src\\components\\referencePost.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":42,"nodeType":"71","messageId":"72","endLine":2,"endColumn":46},{"ruleId":"69","severity":1,"message":"73","line":30,"column":10,"nodeType":"71","messageId":"72","endLine":30,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":17,"column":6,"nodeType":"76","endLine":17,"endColumn":8,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":26,"column":6,"nodeType":"76","endLine":26,"endColumn":18,"suggestions":"79"},{"ruleId":"69","severity":1,"message":"80","line":36,"column":44,"nodeType":"71","messageId":"72","endLine":36,"endColumn":57},{"ruleId":"69","severity":1,"message":"81","line":36,"column":59,"nodeType":"71","messageId":"72","endLine":36,"endColumn":69},{"ruleId":"69","severity":1,"message":"82","line":36,"column":71,"nodeType":"71","messageId":"72","endLine":36,"endColumn":83},{"ruleId":"83","severity":1,"message":"84","line":15,"column":29,"nodeType":"85","messageId":"86","endLine":15,"endColumn":31},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'submit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'approvalData'. Either include it or remove the dependency array.","ArrayExpression",["89"],"React Hook useEffect has a missing dependency: 'seasonsObj'. Either include it or remove the dependency array. You can also do a functional update 'setSeasonsObj(s => ...)' if you only need 'seasonsObj' in the 'setSeasonsObj' call.",["90"],"'overallNumber' is assigned a value but never used.","'references' is assigned a value but never used.","'seasonNumber' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [approvalData]",{"range":"95","text":"96"},"Update the dependencies array to be: [seasonsObj, showSeason]",{"range":"97","text":"98"},[528,530],"[approvalData]",[929,941],"[seasonsObj, showSeason]"]