[{"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/index.js":"1","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/App.js":"2","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/reportWebVitals.js":"3","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/InputReferences.js":"4"},{"size":506,"mtime":1609362364447,"results":"5","hashOfConfig":"6"},{"size":317,"mtime":1609362368438,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1609273949542,"results":"8","hashOfConfig":"6"},{"size":3783,"mtime":1609361071954,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1l7p9qi",{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/index.js",[],["22","23"],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/App.js",["24","25","26"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './sass/App.scss';\nimport InputReferences from './components/InputReferences';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <InputReferences />      \n    </div>\n  );\n}\n\nexport default App;\n\n\n","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/reportWebVitals.js",[],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/InputReferences.js",["27"],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst InputReferences = () => {\n  const [seasonNum, setSeasonNum] = useState(1);\n  const [episodeNum, setEpisodeNum] = useState(1);\n  const [episodeName, setEpisodeName] = useState('');\n  const [subject, setSubject] = useState('');\n  const [timestamp, setTimestamp] = useState(\"\");\n  const [quote, setQuote] = useState('');\n  const [speaker, setSpeaker] = useState('');\n  const [speakerContext, setSpeakerContext] = useState('');\n  const [meaning, setMeaning] = useState('');\n  const [submit, setSubmit] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // console.log('season num: ', seasonNum);\n    setSubmit(!submit);\n  }\n  useEffect(() => {\n    console.log('test');\n    // axios.post({\n    //   method: 'post',\n    //   url: '',\n    //   data: {\n    //     season: seasonNum,\n    //     episode: episodeNum,\n    //     name: episodeName,\n    //     references: [\n          \n    //     ]\n    //   }\n    // }).then((res) => {\n    //   console.log('maloned', res);\n    // });\n    setSeasonNum(1);\n    setEpisodeNum(1);\n    setEpisodeName('');\n    setSubject('');\n    setTimestamp('');\n    setQuote('');\n    setSpeaker('');\n    setSpeakerContext('');\n    setMeaning('');\n    setSubmit('');\n  }, [submit])\n  \n  // componentDidMount\n  // useEffect(() => {\n  // const res = await axios.post('https:sample-endpoint.com/data')\n  // })\n  return (\n    <section className=\"referencesForm\">\n      <h2>Add your reference!</h2>\n      <form action=\"submit\" onSubmit={handleSubmit}>\n        <label htmlFor=\"seasonNum\">Season Number</label>\n        <input\n          type=\"text\"\n          name=\"seasonNum\"\n          value={seasonNum}\n          onChange={(e) => setSeasonNum(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"episodeNum\">Episode Number</label>\n        <input\n          type=\"text\"\n          name=\"episodeNum\"\n          value={episodeNum}\n          onChange={(e) => setEpisodeNum(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"episodeName\">Episode Name</label>\n        <input\n          type=\"text\"\n          name=\"episodeName\"\n          value={episodeName}\n          onChange={(e) => setEpisodeName(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"subject\">Subject</label>\n        <input\n          type=\"text\"\n          name=\"subject\"\n          value={subject}\n          onChange={(e) => setSubject(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"timestamp\">Time Stamp</label>\n        <input\n          type=\"text\"\n          name=\"timestamp\"\n          value={timestamp}\n          onChange={(e) => setTimestamp(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"quot\">Quote</label>\n        <input\n          type=\"text\"\n          name=\"quote\"\n          value={quote}\n          onChange={(e) => setQuote(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"speaker\">Speaker</label>\n        <input\n          type=\"text\"\n          name=\"speaker\"\n          value={speaker}\n          onChange={(e) => setSpeaker(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"speakerContext\">Context</label>\n        <input\n          type=\"text\"\n          name=\"speakerContext\"\n          value={speakerContext}\n          onChange={(e) => setSpeakerContext(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"meaning\">Meaning</label>\n        <input\n          type=\"text\"\n          name=\"meaning\"\n          value={meaning}\n          onChange={(e) => setMeaning(e.target.value)}\n          required\n        />\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </section>\n  );\n}\n\nexport default InputReferences;",["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":2,"column":27,"nodeType":"36","messageId":"37","endLine":2,"endColumn":33},{"ruleId":"34","severity":1,"message":"38","line":2,"column":35,"nodeType":"36","messageId":"37","endLine":2,"endColumn":40},{"ruleId":"34","severity":1,"message":"39","line":2,"column":42,"nodeType":"36","messageId":"37","endLine":2,"endColumn":46},{"ruleId":"34","severity":1,"message":"40","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":13},{"ruleId":"30","replacedBy":"41"},{"ruleId":"32","replacedBy":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.",["43"],["44"],"no-global-assign","no-unsafe-negation"]