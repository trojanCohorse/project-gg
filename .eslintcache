[{"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/index.js":"1","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/App.js":"2","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/Navbar.js":"3","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/Instructions.js":"4","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/InputReferences.js":"5","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/SeasonDisplay.js":"6","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/LoginButton.js":"7","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/LogoutButton.js":"8","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/episodeReq.js":"9","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/NewReferencesDisplay.js":"10","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/Episode.js":"11","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/Season.js":"12","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/ApproveRefCard.js":"13","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/referencePost.js":"14","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/AuthButtons.js":"15"},{"size":439,"mtime":1610203643672,"results":"16","hashOfConfig":"17"},{"size":1693,"mtime":1610203643665,"results":"18","hashOfConfig":"17"},{"size":2474,"mtime":1610203643667,"results":"19","hashOfConfig":"17"},{"size":1731,"mtime":1610203643667,"results":"20","hashOfConfig":"17"},{"size":6653,"mtime":1610222026258,"results":"21","hashOfConfig":"17"},{"size":2184,"mtime":1610203643669,"results":"22","hashOfConfig":"17"},{"size":219,"mtime":1609692234078,"results":"23","hashOfConfig":"17"},{"size":202,"mtime":1609692234078,"results":"24","hashOfConfig":"17"},{"size":683,"mtime":1610203643670,"results":"25","hashOfConfig":"17"},{"size":2561,"mtime":1610225075191,"results":"26","hashOfConfig":"17"},{"size":3181,"mtime":1610203643666,"results":"27","hashOfConfig":"17"},{"size":901,"mtime":1610203643669,"results":"28","hashOfConfig":"17"},{"size":3692,"mtime":1610224419429,"results":"29","hashOfConfig":"17"},{"size":606,"mtime":1610203643671,"results":"30","hashOfConfig":"17"},{"size":571,"mtime":1610222771481,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1l7p9qi",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/index.js",[],["68","69"],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/App.js",[],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/Navbar.js",["70","71","72"],"import Fragment, { useRef } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport LoginButton from './LoginButton.js';\nimport LogoutButton from './LogoutButton.js'\n\nconst Navbar = () => {\n  const { user, isAuthenticated } = useAuth0();\n  const checkBox = document.getElementById('dropDownMenu');\n  const changeCheckedToFalse = (checkBoxTarget) => {\n    checkBoxTarget.checked = false;\n    return checkBoxTarget;\n  };\n  return (\n    <div>\n      {/* drop down menu that will occur at media query 1135px */}\n      <input type=\"checkbox\" name=\"dropDownMenu\" id=\"dropDownMenu\" />\n      <div className=\"menuToggle\">\n        <label htmlFor=\"dropDownMenu\" aria-label=\"Menu\">\n          {/* hamburger menu */}\n          <span></span>\n          <span></span>\n          <span></span>\n        </label>\n      </div>\n      <nav>\n        <ul className=\"wrapper\">\n          <div className=\"seasons\">\n            <li>\n              <Link to=\"/season/1\" onClick={() => changeCheckedToFalse(checkBox)}>Season 1</Link>\n            </li>\n            <li>\n              <Link to=\"/season/2\" onClick={() => changeCheckedToFalse(checkBox)}>Season 2</Link>\n            </li>\n            <li>\n              <Link to=\"/season/3\" onClick={() => changeCheckedToFalse(checkBox)}>Season 3</Link>\n            </li>\n            <li>\n              <Link to=\"/season/4\" onClick={() => changeCheckedToFalse(checkBox)}>Season 4</Link>\n            </li>\n            <li>\n              <Link to=\"/season/5\" onClick={() => changeCheckedToFalse(checkBox)}>Season 5</Link>\n            </li>\n            <li>\n              <Link to=\"/season/6\" onClick={() => changeCheckedToFalse(checkBox)}>Season 6</Link>\n            </li>\n            <li>\n              <Link to=\"/season/7\" onClick={() => changeCheckedToFalse(checkBox)}>Season 7</Link>\n            </li>\n          </div>\n          <div className=\"navLinks\">\n            <li>\n              <Link to=\"/approve\" onClick={() => changeCheckedToFalse(checkBox)}>Approve Ref</Link>\n            </li>\n            <li>\n              <Link to=\"/input\" onClick={() => changeCheckedToFalse(checkBox)}>New Reference</Link>\n            </li>\n            <li>\n              {isAuthenticated ? <LogoutButton onClick={() => changeCheckedToFalse(checkBox)}/> : <LoginButton onClick={() => changeCheckedToFalse(checkBox)}/>}\n            </li>\n          </div>\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/Instructions.js",[],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/InputReferences.js",["73"],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/SeasonDisplay.js",["74","75"],"import { useState, useEffect, } from 'react';\nimport { Route, Link, useParams, Switch, useRouteMatch } from 'react-router-dom';\nimport axios from 'axios';\nimport Episode from './Episode.js';\nimport Season from './Season.js';\n\nconst SeasonDisplay = () => {\n  const { seasonNum } = useParams();\n  const { url } = useRouteMatch();\n  const [episodeObj, setEpisodeObj] = useState({});\n  const [episodeNum, setEpisodeNum] = useState(1);\n\n  const getEpisodeAxios = async () => {\n    return await axios.get(`https://project-gg.herokuapp.com/seasons/${seasonNum}/episodes/${episodeNum}`)\n      .then(res => {\n        const newEpisodeObj = episodeObj;\n        newEpisodeObj[seasonNum] = { [episodeNum]: res.data[0] };\n        setEpisodeObj(newEpisodeObj);\n        return res.data[0];\n      })\n      .catch(err => alert('Err: ', err));\n  }\n\n  const [seasonsObj, setSeasonsObj] = useState({});\n  const [showSeason, setShowSeason] = useState(seasonNum);\n  if (showSeason !== seasonNum) setShowSeason(seasonNum); // this is to prevent rerenders\n\n  useEffect(() => {\n    if (typeof seasonsObj[showSeason] === 'undefined') {\n      axios({\n        method: 'GET',\n        url: `https://project-gg.herokuapp.com/seasons/${showSeason}`\n      }).then(res => {\n        setSeasonsObj({...seasonsObj, [showSeason]: [res.data[0]] })\n      }).catch(err => alert(err));\n    }\n  }, [showSeason]);\n\n  const changeEpisodeNum = (num) => {\n    setEpisodeNum(num);\n    return num;\n  }\n\n  const getEpisode = async () => {\n    if (!episodeObj[seasonNum]) {\n      const result = await getEpisodeAxios();\n      return result;\n    } else if (!episodeObj[seasonNum][episodeNum]) {\n      const result = await getEpisodeAxios();\n      return result;\n    }\n    return episodeObj[seasonNum][episodeNum];\n  }\n\n  return (\n    <div>\n      <h2>Season {seasonNum}</h2>\n      <Switch>\n        <Route exact path={`${url}`} render={() => (\n          <Season season={seasonsObj[showSeason]} />\n        )} />\n        <Route path={`${url}/episode/:episodeNum`} render={() => (\n          <Episode getEpisode={getEpisode} changeEpisodeNum={changeEpisodeNum} />\n        )} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default SeasonDisplay;\n\n","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/LoginButton.js",[],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/LogoutButton.js",[],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/episodeReq.js",["76"],"import axios from 'axios';\n\nconst axiosRequest = (seasonNum) => {\n  // formatted array that has returned values from map, and then gets returned itself\n  const readyToExport = [];\n  axios({\n    method: 'GET',\n    url: `https://project-gg.herokuapp.com/seasons/${seasonNum}`,\n    responseType: \"json\"\n  }).then((res) => {\n    const episodesArr =res.data[0].episodes;\n\n    episodesArr.map(episode => {\n      const formattedEpisode = {\n        value: episode.episodeNumber,\n        label: `${episode.episodeNumber} - ${episode.name}`\n      }\n      readyToExport.push(formattedEpisode);\n    });\n  }).catch((err) => alert(err));\n  \n  return readyToExport;\n}\n\nexport default axiosRequest;\n","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/NewReferencesDisplay.js",[],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/Episode.js",["77","78","79","80","81"],"// import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\nconst Episode = (props) => { \n  \n  const { episodeNum } = useParams();\n  const [result, setResult] = useState(0);\n  const [episodeResult, setEpisodeResult] = useState(0);\n  const [image, setImage] = useState([]);\n  const [sortedEpisodes, setSortedEpisodes] = useState([]);\n\n  useEffect(() => {\n    props.changeEpisodeNum(episodeNum);\n    setResult(5);\n  }, []);\n\n  useEffect(() => {\n    if (result !== 0) {\n      props.getEpisode().then((res) => {\n        setEpisodeResult(res)\n      });\n    }\n  }, [result]);\n\n  useEffect(() => {\n    const seasonNum = episodeResult.seasonNumber; \n\n    if (episodeResult) {\n      axios({\n        method: 'GET',\n        url: `https://api.themoviedb.org/3/tv/4586/season/${seasonNum}/episode/${episodeNum}?api_key=cd7b67374269e15777a55aee45332dab`\n      }).then(res => {\n        const newImage = 'https://image.tmdb.org/t/p/original' + res.data.still_path;\n        setImage(newImage);\n      }).catch(err => alert('err: ', err));\n    }\n  }, [episodeResult])\n\n  useEffect(() => {\n    if (episodeResult !== 0) setSortedEpisodes();\n  }, [episodeResult])\n\n  return (\n    <section className=\"episodeInfo\">\n      {episodeResult && (\n        <div className=\"wrapper\">\n          <h3>{episodeResult.name}</h3>\n          <img src={image} alt=\"image of show\" />\n          {\n            episodeResult.references.length > 0 && (\n              <section className=\"references episodeContainer\">\n                {\n                  episodeResult.references.map(reference => {\n                    return (\n                      <article key={reference.id} className=\"episodeRef\">\n                        <div className=\"entryLine\">\n                          <h5>Subject:</h5>\n                          <p className=\"scroll\">{reference.subject}</p>\n                        </div>\n                        <div className=\"entryLine\">\n                          <h5>Time Stamp:</h5>\n                          <p>{reference.timestamp}</p>\n                        </div>\n                        <div className=\"entryLine\">\n                          <h5>Quote:</h5>\n                          <p className=\"scroll\">{reference.quote}</p>\n                        </div>\n                        <div className=\"entryLine\">\n                          <h5>Speaker:</h5>\n                          <p className=\"scroll\">{reference.speaker}</p>\n                        </div>\n                        <div className=\"entryLine\">\n                          <h5>Context:</h5>\n                          <p className=\"scroll\">{reference.context}</p>\n                        </div>\n                        <div className=\"entryLine\">\n                          <h5>Meaning:</h5>\n                          <p className=\"scroll\">{reference.meaning}</p>\n                        </div>\n                      </article>\n                    )\n                  })\n                }\n              </section>\n            )\n          }\n        </div>\n      )}\n    </section>\n  )\n}\n\nexport default Episode;","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/Season.js",["82","83"],"import { Link } from 'react-router-dom';\n\nconst Season = ({ season }) => {\n  return (\n    <section className=\"seasonDisplay\">\n      <ul className=\"episodeList wrapper\">\n        {\n          typeof season !== 'undefined' && (\n            season[0].episodes.map((episode) => {\n              const { episodeNumber, name, overallNumber, references, seasonNumber } = episode;\n              return (\n                <li key={episodeNumber} className=\"episodeCard\">\n                  <div>\n                    <h3>{name}</h3>\n                    <h4> Episode {episodeNumber}</h4>\n                  </div>\n                  {/* STRETCH: Custom GIFs <p>Image Goes Here</p> */}\n                  <Link to={`/season/${seasonNumber}/episode/${episodeNumber}`} >See References</Link>\n                </li>\n              )\n            })\n          )\n        }\n      </ul>\n    </section>\n  )\n}\n\nexport default Season;","/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/ApproveRefCard.js",["84","85","86","87","88","89"],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/referencePost.js",[],"/Users/caitlinklotz/Documents/code/gilmoreGirlsAPI/project-gg/src/components/AuthButtons.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":8,"nodeType":"96","messageId":"97","endLine":1,"endColumn":16},{"ruleId":"94","severity":1,"message":"98","line":1,"column":20,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"99","line":8,"column":11,"nodeType":"96","messageId":"97","endLine":8,"endColumn":15},{"ruleId":"94","severity":1,"message":"100","line":30,"column":10,"nodeType":"96","messageId":"97","endLine":30,"endColumn":16},{"ruleId":"94","severity":1,"message":"101","line":2,"column":17,"nodeType":"96","messageId":"97","endLine":2,"endColumn":21},{"ruleId":"102","severity":1,"message":"103","line":37,"column":6,"nodeType":"104","endLine":37,"endColumn":18,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":13,"column":29,"nodeType":"108","messageId":"109","endLine":13,"endColumn":31},{"ruleId":"94","severity":1,"message":"110","line":13,"column":10,"nodeType":"96","messageId":"97","endLine":13,"endColumn":24},{"ruleId":"102","severity":1,"message":"111","line":18,"column":6,"nodeType":"104","endLine":18,"endColumn":8,"suggestions":"112"},{"ruleId":"102","severity":1,"message":"113","line":26,"column":6,"nodeType":"104","endLine":26,"endColumn":14,"suggestions":"114"},{"ruleId":"102","severity":1,"message":"115","line":40,"column":6,"nodeType":"104","endLine":40,"endColumn":21,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":51,"column":11,"nodeType":"119","endLine":51,"endColumn":50},{"ruleId":"94","severity":1,"message":"120","line":10,"column":44,"nodeType":"96","messageId":"97","endLine":10,"endColumn":57},{"ruleId":"94","severity":1,"message":"121","line":10,"column":59,"nodeType":"96","messageId":"97","endLine":10,"endColumn":69},{"ruleId":"122","severity":1,"message":"123","line":36,"column":30,"nodeType":"124","messageId":"125","endLine":36,"endColumn":31},{"ruleId":"122","severity":1,"message":"123","line":43,"column":30,"nodeType":"124","messageId":"125","endLine":43,"endColumn":31},{"ruleId":"122","severity":1,"message":"123","line":50,"column":61,"nodeType":"124","messageId":"125","endLine":50,"endColumn":62},{"ruleId":"122","severity":1,"message":"123","line":62,"column":30,"nodeType":"124","messageId":"125","endLine":62,"endColumn":31},{"ruleId":"122","severity":1,"message":"123","line":69,"column":63,"nodeType":"124","messageId":"125","endLine":69,"endColumn":64},{"ruleId":"122","severity":1,"message":"123","line":81,"column":63,"nodeType":"124","messageId":"125","endLine":81,"endColumn":64},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'user' is assigned a value but never used.","'submit' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'seasonsObj'. Either include it or remove the dependency array. You can also do a functional update 'setSeasonsObj(s => ...)' if you only need 'seasonsObj' in the 'setSeasonsObj' call.","ArrayExpression",["128"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'sortedEpisodes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'episodeNum' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["129"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["130"],"React Hook useEffect has a missing dependency: 'episodeNum'. Either include it or remove the dependency array.",["131"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'overallNumber' is assigned a value but never used.","'references' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [seasonsObj, showSeason]",{"range":"140","text":"141"},"Update the dependencies array to be: [episodeNum, props]",{"range":"142","text":"143"},"Update the dependencies array to be: [props, result]",{"range":"144","text":"145"},"Update the dependencies array to be: [episodeNum, episodeResult]",{"range":"146","text":"147"},[1354,1366],"[seasonsObj, showSeason]",[554,556],"[episodeNum, props]",[696,704],"[props, result]",[1169,1184],"[episodeNum, episodeResult]"]